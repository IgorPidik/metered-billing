
version: '3.9'
services:
  customer_service:
    build: ../customer_service/.
    command: gow run /src/app/.
    restart: always
    ports:
      - 50051:50051
    volumes:
      - ./../customer_service/app:/src/app

  validator:
    build: ../validator/.
    command: gow run /src/app/main.go
    restart: always
    volumes:
      - ./../validator/app:/src/app

  consumer:
    build: ../consumer/.
    command: gow run /src/app/main.go
    restart: always
    ports:
      - 3333:3333
    volumes:
      - ./../consumer/app:/src/app

  billing_service:
    build: ../billing_service/.
    command: gow run /src/app/main.go
    restart: always
    ports:
      - 8081:8081
    volumes:
      - ./../billing_service/app:/src/app

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./zookeeper/data:/var/lib/zookeeper/data 
      - ./zookeeper/log:/var/lib/zookeeper/log 
    ports:
      - 22181:2181
 
  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    volumes:
      - ./kafka_data:/var/lib/kafka/data

    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic consumed_hits --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic validated_hits --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
